{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NC+CpJC,EA1CD,SAAC,GAAuD,IAAD,IAApDC,KAAOC,EAA6C,EAA7CA,UAAUC,EAAmC,EAAnCA,UAAUC,EAAyB,EAAzBA,OAAOC,EAAkB,EAAlBA,WAC/C,OAAIH,EAIA,yBAAKI,UAAaC,IAAOC,WACrB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAW,EAAGC,QAAU,UACpC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAaC,IAAMC,GAAM,GAAIC,GAAM,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOY,WAC/E,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAO,gBAAgBC,cAAY,GAA/C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAU,MAClB,kBAAC,IAAD,CAASC,MAAS,EAAGC,IAAOxB,EAAUyB,MAAOC,SAAY,IAAKC,UAAY,OAE9E,kBAACR,EAAA,EAAD,CAAYG,QAAU,iBAAiB,IAAIM,KAAKzB,GAAY0B,gBAC5D,kBAACV,EAAA,EAAD,CAAYG,QAAU,SAAtB,wCAGP,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAaC,IAAMC,GAAM,GAAIC,GAAM,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOJ,YAC/E,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAO,gBAAgBC,cAAY,GAA/C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAU,MAClB,kBAAC,IAAD,CAASC,MAAS,EAAGC,IAAOvB,EAAUwB,MAAOC,SAAY,IAAKC,UAAY,OAE9E,kBAACR,EAAA,EAAD,CAAYG,QAAU,iBAAiB,IAAIM,KAAKzB,GAAY0B,gBAC5D,kBAACV,EAAA,EAAD,CAAYG,QAAU,SAAtB,wCAGP,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAaC,IAAMC,GAAM,GAAIC,GAAM,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOH,SAC/E,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAO,gBAAgBC,cAAY,GAA/C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAU,MAClB,kBAAC,IAAD,CAASC,MAAS,EAAGC,IAAOtB,EAAOuB,MAAOC,SAAY,IAAKC,UAAY,OAE3E,kBAACR,EAAA,EAAD,CAAYG,QAAU,iBAAiB,IAAIM,KAAKzB,GAAY0B,gBAC5D,kBAACV,EAAA,EAAD,CAAYG,QAAU,SAAtB,2CAhCR,c,yBCNTQ,EAAM,kCAECC,EAAS,uCAAG,WAAMC,GAAN,2BAAAC,EAAA,6DACjBC,EAAgBJ,EACjBE,IACCE,EAAa,UAAMJ,EAAN,sBAAuBE,IAHnB,kBAMiDG,IAAMC,IAAIF,GAN3D,2BAMVnC,KAAOC,EANG,EAMHA,UAAWC,EANR,EAMQA,UAAWC,EANnB,EAMmBA,OAAQC,EAN3B,EAM2BA,WAN3B,kBAOV,CACHH,YACAC,YACAC,SACAC,eAXa,kCAcjBkC,QAAQC,IAAR,MAdiB,0DAAH,sDAkBTC,EAAc,uCAAG,gCAAAN,EAAA,+EAEDE,IAAMC,IAAN,UAAaN,EAAb,WAFC,uBAEf/B,EAFe,EAEfA,KACDyC,EAAezC,EAAK0C,KAAI,SAACC,GAAD,MAAgB,CAC1C1C,UAAW0C,EAAU1C,UAAU2C,MAC/BzC,OAAQwC,EAAUxC,OAAOyC,MACzBC,KAAMF,EAAUG,eANE,kBAQfL,GARe,gCAUtBH,QAAQC,IAAR,MAVsB,yDAAH,qDAedQ,EAAc,uCAAG,8BAAAb,EAAA,+EAEQE,IAAMC,IAAN,UAAaN,EAAb,eAFR,uBAEZiB,EAFY,EAEnBhD,KAAOgD,UAFY,kBAGnBA,EAAUN,KAAI,SAACT,GAAD,OAAaA,EAAQgB,SAHhB,gCAKtBX,QAAQC,IAAR,MALsB,yDAAH,qD,yBC6BZW,EA7DD,SAAC,GAAiD,IAAD,IAA/ClD,KAAMC,EAAyC,EAAzCA,UAAUE,EAA+B,EAA/BA,OAAOD,EAAwB,EAAxBA,UAAW+B,EAAa,EAAbA,QAAa,EAC3BkB,mBAAS,IADkB,mBACrDR,EADqD,KAC3CS,EAD2C,KAG3DC,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbkB,EADa,SACMZ,IADN,6EAAH,qDAGdc,KACD,IAEH,IAAMC,EACFZ,EAAUa,OAAW,kBAAC,IAAD,CACjBxD,KAAQ,CACJyD,OAAQd,EAAUD,KAAI,qBAAEG,QACxBa,SAAU,CAAC,CACP1D,KAAM2C,EAAUD,KAAI,qBAAEzC,aACtB0D,MAAO,WACPC,YAAa,UACbC,MAAM,GACR,CACE7D,KAAM2C,EAAUD,KAAI,qBAAEvC,UACtBwD,MAAO,SACPC,YAAa,MACbE,gBAAiB,oBACjBD,MAAM,OAGZ,KAEVvB,QAAQC,IAAItC,EAAUE,EAAOD,GAE7B,IAAM6D,EACF9D,EAEQ,kBAAC,IAAD,CACID,KAAQ,CACJyD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CAAC,CACPC,MAAO,SACPG,gBAAiB,CACb,oBACA,qBACA,qBAEJ9D,KAAM,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,UAGxDsC,QAAW,CACPC,OAAQ,CAACC,SAAQ,GACjBC,MAAO,CAACD,SAAS,EAAME,KAAK,oBAAD,OAAsBnC,OAGzD,KAEZ,OACI,yBAAK5B,UAAaC,IAAOC,WACpB0B,EAAU8B,EAAUR,I,mCCpClBc,EAnBO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBAAyB,EACEnB,mBAAU,IADZ,mBACtCoB,EADsC,KACrBC,EADqB,KAS7C,OAPAnB,qBAAW,YACO,uCAAG,sBAAAnB,EAAA,kEACbsC,EADa,SACazB,IADb,6EAAH,qDAGd0B,KACD,CAACD,IAGA,kBAACE,EAAA,EAAD,CAAarE,UAAaC,IAAOqE,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAe,GAAGC,SAAY,SAACC,GAAD,OAAOT,EAAoBS,EAAEC,OAAOtD,SAC5E,4BAAQA,MAAQ,IAAhB,UACC6C,EAAiB7B,KAAI,SAACT,EAAQgD,GAAT,OAAe,4BAAQC,IAAOD,EAAGvD,MAASO,GAAUA,S,kCCiB3EkD,E,4MA5BXC,MAAQ,CACJpF,KAAM,GACNiC,QAAS,I,EAObqC,oB,uCAAsB,WAAOrC,GAAP,eAAAC,EAAA,sEACQF,EAAUC,GADlB,OACZoD,EADY,OAElB,EAAKC,SAAS,CAACtF,KAAKqF,EAAYpD,QAAQA,IACxCK,QAAQC,IAAI8C,GAHM,2C,wPAJQrD,I,OAApBqD,E,OACNE,KAAKD,SAAS,CAACtF,KAAKqF,I,qIASd,IAAD,EACkBE,KAAKH,MAArBpF,EADF,EACEA,KAAKiC,EADP,EACOA,QACZ,OACI,yBAAK5B,UAAaC,IAAOC,WACrB,yBAAKF,UAAaC,IAAOkF,MAAOC,IAAOC,IAAaC,IAAM,aAC5D,kBAAC,EAAD,CAAO3F,KAAQA,IACf,kBAAC,EAAD,CAAesE,oBAAuBiB,KAAKjB,sBAC3C,kBAAC,EAAD,CAAOtE,KAAQA,EAAMiC,QAAWA,S,GAvB5B2D,IAAMC,WCHvBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCHlDpG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.44061950.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2ErrN\",\"card\":\"Cards_card__kGLhz\",\"infected\":\"Cards_infected__3nimL\",\"recovered\":\"Cards_recovered__11Bu3\",\"deaths\":\"Cards_deaths__2rDzG\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid, StylesProvider} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: {confirmed,recovered,deaths,lastUpdate} }) => {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n    return (\r\n        <div className = {styles.container}>\r\n            <Grid container spacing = {3} justify = 'center'>\r\n                <Grid item component = {Card} xs = {12} md = {3} className={cx(styles.card,styles.infected)}>\r\n                   <CardContent>\r\n                       <Typography color =\"textSecondary\" gutterBottom>Infected</Typography>\r\n                       <Typography variant = \"h5\">\r\n                           <CountUp start = {0} end = {confirmed.value} duration = {2.5} separator = \",\"/>\r\n                       </Typography>\r\n                       <Typography variant = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant = \"body2\">Number of active cases of COVID-19</Typography>\r\n                       </CardContent> \r\n                </Grid>\r\n                <Grid item component = {Card} xs = {12} md = {3} className={cx(styles.card,styles.recovered)}>\r\n                   <CardContent>\r\n                       <Typography color =\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                       <Typography variant = \"h5\">\r\n                           <CountUp start = {0} end = {recovered.value} duration = {2.5} separator = \",\"/>\r\n                       </Typography>\r\n                       <Typography variant = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant = \"body2\">Number of recoveries from COVID-19</Typography>\r\n                       </CardContent> \r\n                </Grid>\r\n                <Grid item component = {Card} xs = {12} md = {3} className={cx(styles.card,styles.deaths)}>\r\n                   <CardContent>\r\n                       <Typography color =\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                       <Typography variant = \"h5\">\r\n                           <CountUp start = {0} end = {deaths.value} duration = {2.5} separator = \",\"/>\r\n                       </Typography>\r\n                       <Typography variant = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant = \"body2\">Number of deaths caused by COVID-19</Typography>\r\n                       </CardContent> \r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = ' https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeableUrl = url;\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const {data: {confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableUrl);\r\n        return {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate\r\n        }\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n    const {data: {countries}} = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n}","import React, {useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed,deaths,recovered},country}) => {\r\n    const[dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchApi();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length  ? (<Line\r\n            data = {{\r\n                labels: dailyData.map(({date}) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                },{\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />) : null\r\n    );\r\n    console.log(confirmed,deaths,recovered);\r\n\r\n    const barChart = (\r\n        confirmed  \r\n            ? (\r\n                <Bar \r\n                    data = {{\r\n                        labels: ['Infected', 'Recovered', 'Deaths'],\r\n                        datasets: [{\r\n                            label: 'People',\r\n                            backgroundColor: [\r\n                                'rgba(0,0,255,0.5)',\r\n                                'rgba(0,255, 0,0.5)',\r\n                                'rgba(255,0,0,0.5)',\r\n                            ],\r\n                            data: [confirmed.value, recovered.value, deaths.value]\r\n                        }]\r\n                    }}\r\n                    options = {{\r\n                        legend: {display:false},\r\n                        title: {display: true, text: `Current state in ${country}`},\r\n                    }}\r\n                />\r\n            ) : null\r\n    );\r\n    return (\r\n        <div className = {styles.container}>\r\n            {country ? barChart: lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState,useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries,setFetchedCountries] = useState ([]);\r\n    useEffect (() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className = {styles.formControl}>\r\n            <NativeSelect defaultValue = \"\" onChange = {(e) => handleCountryChange(e.target.value)}>\r\n                <option value = \"\">Global</option>\r\n                {fetchedCountries.map((country,i) => <option key = {i} value = {country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport {Cards,Chart,CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from \"./api\";\r\nimport coronaImage from './images/covid.png';\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({data:fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data:fetchedData,country:country});\r\n        console.log(fetchedData);\r\n    }\r\n\r\n    render() {\r\n        const {data,country} = this.state;\r\n        return (\r\n            <div className = {styles.container}>\r\n                <img className = {styles.image} src = {coronaImage} alt = \"COVID-19\"/>\r\n              <Cards data = {data}/>\r\n              <CountryPicker handleCountryChange = {this.handleCountryChange}/>\r\n              <Chart data = {data} country = {country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n import App from './App';\r\n\r\n ReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2qRUJ\",\"image\":\"App_image__1KBYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1eVZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1AT2-\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";"],"sourceRoot":""}